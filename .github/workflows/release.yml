name:  Unchained Launcher Tag Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        targetplatform: [x64]
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Path: C2GUILauncher.sln
      Wpf_Project_Path: C2GUILauncher\C2GUILauncher.csproj 
      Actions_Allow_Unsecure_Commands: true # Allows AddPAth and SetEnv commands

    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.1
      with:
        fetch-depth: 0 # avoid shallow clone to get tag info

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1

    # Restore the application
    - name:  Restore the Wpf application to populate the obj folder
      run: msbuild $env:Solution_Path /t:Restore /p:Configuration=$env:Configuration /p:RuntimeIdentifier=$env:RuntimeIdentifier
      env:
        Configuration: ${{ matrix.configuration }}
        RuntimeIdentifier: win-${{ matrix.targetplatform }}

    # Build the Windows Application Packaging project
    - name: Build UnchainedLauncher
      run: msbuild $env:Solution_Path /p:Platform=$env:TargetPlatform /t:publish /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        TargetPlatform: ${{ matrix.targetplatform }}

    # Upload build result + release package
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.4.2
      with:
        name: Package_$env:Configuration
        path: C2GUILauncher/bin

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.1
        with:
          fetch-depth: 0

      - name: Download Build Artifacts D
        uses: actions/download-artifact@v4.1.8
        with:
          name: Package_Debug
          path: results

      - name: Download Build Artifacts R
        uses: actions/download-artifact@v4.1.8
        with:
          name: Package_Release
          path: results

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: "Release ${{ github.ref }}: ${{ env.tag_annotation }}"
          draft: false
          prerelease: false
          body: |
            ${{ github.ref }}

      # Add Release assets
      - name: Upload Release Launcher
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: results/Release/net6.0-windows/win-x64/publish/UnchainedLauncher.exe
          asset_name: UnchainedLauncher.exe
          asset_content_type: application/octet-stream

      - name: Upload Debug Launcher
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: results/Debug/net6.0-windows/win-x64/publish/UnchainedLauncher.exe
          asset_name: UnchainedLauncher_dbg.exe
          asset_content_type: application/octet-stream

      - name: Upload Debug Launcher PDB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: results/Debug/net6.0-windows/win-x64/publish/UnchainedLauncher.pdb
          asset_name: UnchainedLauncher.pdb
          asset_content_type: application/octet-stream